name: Sync cards from Google

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 * * * *'  # every hour

permissions:
  contents: write

concurrency:
  group: cards-sync
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Optional: clear old versioned folders before writing new ones
      - name: Clean old versioned folders
        run: rm -rf public/campaigns.v-*

      - name: Build cards (canonical + versioned + index + per-slug + manifest + home)
        run: node scripts/build_cards.js

      - name: Commit generated files
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/campaigns.cards.min.json \
                  public/campaigns.cards.*.min.json \
                  public/cards.latest.json \
                  public/campaigns.index.min.json \
                  public/campaigns.home.min.json \
                  public/campaigns.manifest.json
          # add new per-slug versioned folders (do not fail if none)
          git add -A public/campaigns.v-* 2>/dev/null || true
          git diff --cached --quiet && echo "No changes to commit" && exit 0
          git commit -m "Update cards feed from Google"
          git pull --rebase origin main
          git push

      - name: Purge jsDelivr caches
        run: |
          set -e
          purge() { for i in 1 2 3; do curl -fS "$1" && return 0 || sleep 2; done; return 1; }
          # Canonical and pointers
          purge https://purge.jsdelivr.net/gh/Jrosai-dev/fundlibraries-campaigns@main/public/campaigns.cards.min.json
          purge https://purge.jsdelivr.net/gh/Jrosai-dev/fundlibraries-campaigns@main/public/cards.latest.json
          # New non-versioned files
          purge https://purge.jsdelivr.net/gh/Jrosai-dev/fundlibraries-campaigns@main/public/campaigns.index.min.json
          purge https://purge.jsdelivr.net/gh/Jrosai-dev/fundlibraries-campaigns@main/public/campaigns.manifest.json
          purge https://purge.jsdelivr.net/gh/Jrosai-dev/fundlibraries-campaigns@main/public/campaigns.home.min.json
          # Versioned aggregated file (derive from latest)
          VERSIONED_URL=$(node -e "console.log(require('./public/cards.latest.json').url)")
          PURGE_URL="${VERSIONED_URL/cdn.jsdelivr.net\/gh/purge.jsdelivr.net\/gh}"
          purge "$PURGE_URL"
          # Per-slug files are versioned folders, no purge needed

      - name: Verify versioned file is live on CDN
        run: |
          set -e
          VERSIONED_URL=$(node -e "console.log(require('./public/cards.latest.json').url)")
          echo "Waiting for CDN to serve: $VERSIONED_URL"
          for i in $(seq 1 90); do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$VERSIONED_URL")
            if [ "$code" = "200" ]; then
              echo "Versioned JSON is live on jsDelivr."
              exit 0
            fi
            sleep 5
          done
          echo "File not live after retries."
          exit 1

      - name: Check latest pointer (non-fatal)
        continue-on-error: true
        run: |
          set -e
          LATEST_URL="https://cdn.jsdelivr.net/gh/Jrosai-dev/fundlibraries-campaigns@main/public/cards.latest.json?v=$(date +%s)"
          echo "Checking latest pointer: $LATEST_URL"
          for i in $(seq 1 60); do
            code=$(curl -s -o latest.json -w "%{http_code}" "$LATEST_URL")
            if [ "$code" = "200" ] && grep -q '"url":' latest.json; then
              echo "Latest pointer is visible."
              exit 0
            fi
            sleep 5
          done
          echo "Latest pointer still stale. Continuing."
